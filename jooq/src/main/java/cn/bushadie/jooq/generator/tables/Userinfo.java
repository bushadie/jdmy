/*
 * This file is generated by jOOQ.
 */
package cn.bushadie.jooq.generator.tables;


import cn.bushadie.jooq.generator.Indexes;
import cn.bushadie.jooq.generator.Jooq;
import cn.bushadie.jooq.generator.Keys;
import cn.bushadie.jooq.generator.tables.records.UserinfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userinfo extends TableImpl<UserinfoRecord> {

    private static final long serialVersionUID = -1819952414;

    /**
     * The reference instance of <code>jooq.userinfo</code>
     */
    public static final Userinfo USERINFO = new Userinfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserinfoRecord> getRecordType() {
        return UserinfoRecord.class;
    }

    /**
     * The column <code>jooq.userinfo.id</code>.
     */
    public final TableField<UserinfoRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>jooq.userinfo.userid</code>. userid
     */
    public final TableField<UserinfoRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.CHAR(32), this, "userid");

    /**
     * The column <code>jooq.userinfo.address</code>. 地址
     */
    public final TableField<UserinfoRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "地址");

    /**
     * Create a <code>jooq.userinfo</code> table reference
     */
    public Userinfo() {
        this(DSL.name("userinfo"), null);
    }

    /**
     * Create an aliased <code>jooq.userinfo</code> table reference
     */
    public Userinfo(String alias) {
        this(DSL.name(alias), USERINFO);
    }

    /**
     * Create an aliased <code>jooq.userinfo</code> table reference
     */
    public Userinfo(Name alias) {
        this(alias, USERINFO);
    }

    private Userinfo(Name alias, Table<UserinfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userinfo(Name alias, Table<UserinfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Userinfo(Table<O> child, ForeignKey<O, UserinfoRecord> key) {
        super(child, key, USERINFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jooq.JOOQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERINFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserinfoRecord> getPrimaryKey() {
        return Keys.SYNTHETIC_PK_USERINFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserinfoRecord>> getKeys() {
        return Arrays.<UniqueKey<UserinfoRecord>>asList(Keys.KEY_USERINFO_PRIMARY, Keys.SYNTHETIC_PK_USERINFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userinfo as(String alias) {
        return new Userinfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userinfo as(Name alias) {
        return new Userinfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userinfo rename(String name) {
        return new Userinfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Userinfo rename(Name name) {
        return new Userinfo(name, null);
    }
}
