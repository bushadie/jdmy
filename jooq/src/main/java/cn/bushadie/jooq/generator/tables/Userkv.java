/*
 * This file is generated by jOOQ.
 */
package cn.bushadie.jooq.generator.tables;


import cn.bushadie.jooq.generator.Indexes;
import cn.bushadie.jooq.generator.Jooq;
import cn.bushadie.jooq.generator.Keys;
import cn.bushadie.jooq.generator.tables.records.UserkvRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userkv extends TableImpl<UserkvRecord> {

    private static final long serialVersionUID = 1946787765;

    /**
     * The reference instance of <code>jooq.userkv</code>
     */
    public static final Userkv USERKV = new Userkv();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserkvRecord> getRecordType() {
        return UserkvRecord.class;
    }

    /**
     * The column <code>jooq.userkv.id</code>.
     */
    public final TableField<UserkvRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>jooq.userkv.userid</code>.
     */
    public final TableField<UserkvRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>jooq.userkv.k</code>.
     */
    public final TableField<UserkvRecord, String> K = createField("k", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>jooq.userkv.v</code>.
     */
    public final TableField<UserkvRecord, String> V = createField("v", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>jooq.userkv</code> table reference
     */
    public Userkv() {
        this(DSL.name("userkv"), null);
    }

    /**
     * Create an aliased <code>jooq.userkv</code> table reference
     */
    public Userkv(String alias) {
        this(DSL.name(alias), USERKV);
    }

    /**
     * Create an aliased <code>jooq.userkv</code> table reference
     */
    public Userkv(Name alias) {
        this(alias, USERKV);
    }

    private Userkv(Name alias, Table<UserkvRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userkv(Name alias, Table<UserkvRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Userkv(Table<O> child, ForeignKey<O, UserkvRecord> key) {
        super(child, key, USERKV);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jooq.JOOQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERKV_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserkvRecord> getPrimaryKey() {
        return Keys.SYNTHETIC_PK_USERKV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserkvRecord>> getKeys() {
        return Arrays.<UniqueKey<UserkvRecord>>asList(Keys.KEY_USERKV_PRIMARY, Keys.SYNTHETIC_PK_USERKV);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userkv as(String alias) {
        return new Userkv(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userkv as(Name alias) {
        return new Userkv(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userkv rename(String name) {
        return new Userkv(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Userkv rename(Name name) {
        return new Userkv(name, null);
    }
}
